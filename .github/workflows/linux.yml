name: Linux openslide CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ${{ matrix.cfg.os }}
    name: ${{ matrix.cfg.os }}@${{ matrix.cfg.cxx }}-${{ matrix.cfg.cpp-version }}

    strategy:
      matrix:
        cfg:
          #- {os: ubuntu-16.04, cc: gcc, cxx: g++, cpp-version: 5.0, generator: Ninja} # Removed from Sept 20, 2021
          #- {os: ubuntu-16.04, cc: gcc, cxx: g++, cpp-version: 6.0, generator: Ninja} # Removed from Sept 20, 2021
          #- {os: ubuntu-16.04, cc: gcc, cxx: g++, cpp-version: 7.0, generator: Ninja} # Removed from Sept 20, 2021

          - {os: ubuntu-18.04, cc: gcc, cxx: g++, cpp-version: 7.0, generator: Ninja}
          - {os: ubuntu-18.04, cc: gcc, cxx: g++, cpp-version: 8.0, generator: Ninja}
          - {os: ubuntu-18.04, cc: gcc, cxx: g++, cpp-version: 9.0, generator: Ninja}

          #- {os: ubuntu-16.04, cc: gcc, cxx: g++, cpp-version: 5.0, generator: Ninja} # Removed from Sept 20, 2021
          #- {os: ubuntu-16.04, cc: gcc, cxx: g++, cpp-version: 6.0, generator: Ninja} # Removed from Sept 20, 2021
          - {os: ubuntu-20.04, cc: gcc, cxx: g++, cpp-version: 7.0, generator: Ninja}
          - {os: ubuntu-20.04, cc: gcc, cxx: g++, cpp-version: 8.0, generator: Ninja}
          - {os: ubuntu-20.04, cc: gcc, cxx: g++, cpp-version: 9.0, generator: Ninja}
          - {os: ubuntu-20.04, cc: gcc, cxx: g++, cpp-version: 10,  generator: Ninja}


          - {os: ubuntu-20.04, cc: clang, cxx: clang++, cpp-version: 7, generator: Ninja}
          - {os: ubuntu-20.04, cc: clang, cxx: clang++, cpp-version: 8, generator: Ninja}
          - {os: ubuntu-20.04, cc: clang, cxx: clang++, cpp-version: 9, generator: Ninja}
          - {os: ubuntu-20.04, cc: clang, cxx: clang++, cpp-version: 10,generator: Ninja}

    steps:
    - name: Checkout
      uses: actions/checkout@v1
      with:
        submodules: recursive

    - name: Get latest CMake
      uses: lukka/get-cmake@latest

    - name: Install compiler and dependencies
      shell: bash
      run: |
        sudo apt-get update -y
        sudo apt-get install -y ${{ matrix.cfg.cxx }}-${{ matrix.cfg.cpp-version }}

        if [[ "${{ matrix.cfg.cxx }}" == "clang" ]]; then
          sudo apt-get install -y lld-${{ matrix.cfg.cpp-version }} libc++-${{ matrix.cfg.cpp-version }}-dev libc++abi-${{ matrix.cfg.cpp-version }}-dev clang-tools-${{ matrix.cfg.cpp-version }}
        fi

        echo "CC=${{ matrix.cfg.cc }}-${{ matrix.cfg.cpp-version }}" >> $GITHUB_ENV
        echo "CXX=${{ matrix.cfg.cxx }}-${{ matrix.cfg.cpp-version }}" >> $GITHUB_ENV

        # Install the required Library
        sudo apt install -y libtiff-dev
        sudo apt install -y libglib2.0-dev
        sudo apt install -y libcairo2-dev
        sudo apt install -y libgdk-pixbuf2.0-dev
        sudo apt install -y libopenjp2-7
        sudo apt install -y libopencv-dev
        sudo apt install -y libsqlite3-dev
        sudo apt install -y libxml2-dev
        sudo apt install -y zlib1g-dev
        sudo apt install -y libpng-dev
        sudo apt install -y libwebp-dev
        sudo apt install -y libzstd-dev

        # Install OpenJPEG library from source since bionic distribution doesn't support it
        sudo apt install -y liblcms2-dev libz-dev

        git clone https://github.com/uclouvain/openjpeg --depth 1
        cd openjpeg
        git fetch --unshallow
        mkdir build && cd build
        sudo cmake .. -DCMAKE_BUILD_TYPE=Release
        sudo make install
        cd .. && cd ..

    - name: Build with CMake
      uses: lukka/run-cmake@v3
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
        useVcpkgToolchainFile: false
        buildDirectory: '${{ runner.workspace }}/buildDirectory'
        cmakeAppendedArgs: "-G\"${{ matrix.cfg.generator }}\" -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_TEST:BOOL=ON -DPYWRAP:BOOL=OFF"
        cmakeBuildType: 'Release'
        buildWithCMakeArgs: '--config Release --target install'
